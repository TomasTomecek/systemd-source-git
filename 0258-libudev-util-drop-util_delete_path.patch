From 37d522746b67fda0d52111364d81358ce560bcf7 Mon Sep 17 00:00:00 2001
From: Tom Gundersen <teg@jklm.no>
Date: Mon, 15 Sep 2014 14:20:32 +0200
Subject: [PATCH] libudev: util - drop util_delete_path()

Use rmdir_parents() from src/shared instead.
---
 src/libudev/libudev-private.h |  1 -
 src/libudev/libudev-util.c    | 32 --------------------------------
 src/test/test-udev.c          |  2 +-
 src/udev/udev-node.c          |  3 +--
 4 files changed, 2 insertions(+), 36 deletions(-)

diff --git a/src/libudev/libudev-private.h b/src/libudev/libudev-private.h
index 1c060d95a3..2f74bc0883 100644
--- a/src/libudev/libudev-private.h
+++ b/src/libudev/libudev-private.h
@@ -167,7 +167,6 @@ unsigned int util_string_hash32(const char *key);
 uint64_t util_string_bloom64(const char *str);
 
 /* libudev-util-private.c */
-int util_delete_path(struct udev *udev, const char *path);
 int util_resolve_subsys_kernel(struct udev *udev, const char *string, char *result, size_t maxsize, int read_value);
 
 #endif
diff --git a/src/libudev/libudev-util.c b/src/libudev/libudev-util.c
index 3bc9c67f3b..a7125fa63f 100644
--- a/src/libudev/libudev-util.c
+++ b/src/libudev/libudev-util.c
@@ -45,38 +45,6 @@
  * Utilities useful when dealing with devices and device node names.
  */
 
-int util_delete_path(struct udev *udev, const char *path)
-{
-        char p[UTIL_PATH_SIZE];
-        char *pos;
-        int err = 0;
-
-        if (path[0] == '/')
-                while(path[1] == '/')
-                        path++;
-        strscpy(p, sizeof(p), path);
-        pos = strrchr(p, '/');
-        if (pos == p || pos == NULL)
-                return 0;
-
-        for (;;) {
-                *pos = '\0';
-                pos = strrchr(p, '/');
-
-                /* don't remove the last one */
-                if ((pos == p) || (pos == NULL))
-                        break;
-
-                err = rmdir(p);
-                if (err < 0) {
-                        if (errno == ENOENT)
-                                err = 0;
-                        break;
-                }
-        }
-        return err;
-}
-
 /* handle "[<SUBSYSTEM>/<KERNEL>]<attribute>" format */
 int util_resolve_subsys_kernel(struct udev *udev, const char *string,
                                char *result, size_t maxsize, int read_value)
diff --git a/src/test/test-udev.c b/src/test/test-udev.c
index f085262b01..f368c3f333 100644
--- a/src/test/test-udev.c
+++ b/src/test/test-udev.c
@@ -149,7 +149,7 @@ int main(int argc, char *argv[]) {
                         mknod(udev_device_get_devnode(dev), mode, udev_device_get_devnum(dev));
                 } else {
                         unlink(udev_device_get_devnode(dev));
-                        util_delete_path(udev, udev_device_get_devnode(dev));
+                        rmdir_parents(udev_device_get_devnode(dev), "/");
                 }
         }
 
diff --git a/src/udev/udev-node.c b/src/udev/udev-node.c
index d42af9a6d2..c164603795 100644
--- a/src/udev/udev-node.c
+++ b/src/udev/udev-node.c
@@ -179,7 +179,6 @@ static const char *link_find_prioritized(struct udev_device *dev, bool add, cons
 
 /* manage "stack of names" with possibly specified device priorities */
 static void link_update(struct udev_device *dev, const char *slink, bool add) {
-        struct udev *udev = udev_device_get_udev(dev);
         char name_enc[UTIL_PATH_SIZE];
         char filename[UTIL_PATH_SIZE * 2];
         char dirname[UTIL_PATH_SIZE];
@@ -197,7 +196,7 @@ static void link_update(struct udev_device *dev, const char *slink, bool add) {
         if (target == NULL) {
                 log_debug("no reference left, remove '%s'", slink);
                 if (unlink(slink) == 0)
-                        util_delete_path(udev, slink);
+                        rmdir_parents(slink, "/");
         } else {
                 log_debug("creating link '%s' to '%s'", slink, target);
                 node_symlink(dev, target, slink);
