From d63be95a306bf1e262c7e1c7ad4b2c12b49d371e Mon Sep 17 00:00:00 2001
From: Patrik Flykt <patrik.flykt@linux.intel.com>
Date: Mon, 1 Sep 2014 13:21:34 +0300
Subject: [PATCH] test-dhcp6-client: Add checks for Elapsed Time option

Verify that the Elapsed Time option is present.
---
 src/libsystemd-network/test-dhcp6-client.c | 32 ++++++++++++++++++++++++++----
 1 file changed, 28 insertions(+), 4 deletions(-)

diff --git a/src/libsystemd-network/test-dhcp6-client.c b/src/libsystemd-network/test-dhcp6-client.c
index d102a796b4..37ddfc2cfa 100644
--- a/src/libsystemd-network/test-dhcp6-client.c
+++ b/src/libsystemd-network/test-dhcp6-client.c
@@ -269,6 +269,11 @@ static int test_advertise_option(sd_event *e) {
                                                              *optval) >= 0);
                         break;
 
+                case DHCP6_OPTION_ELAPSED_TIME:
+                        assert_se(optlen == 2);
+
+                        break;
+
                 default:
                         break;
                 }
@@ -361,7 +366,8 @@ static int test_client_verify_request(DHCP6Message *request, uint8_t *option,
         uint8_t *optval;
         uint16_t optcode;
         size_t optlen;
-        bool found_clientid = false, found_iana = false, found_serverid = false;
+        bool found_clientid = false, found_iana = false, found_serverid = false,
+                found_elapsed_time = false;
         int r;
         struct in6_addr addr;
         be32_t val;
@@ -410,11 +416,20 @@ static int test_client_verify_request(DHCP6Message *request, uint8_t *option,
                         assert_se(!memcmp(&msg_advertise[179], optval, optlen));
 
                         break;
+
+                case DHCP6_OPTION_ELAPSED_TIME:
+                        assert_se(!found_elapsed_time);
+                        found_elapsed_time = true;
+
+                        assert_se(optlen == 2);
+
+                        break;
                 }
         }
 
         assert_se(r == -ENOMSG);
-        assert_se(found_clientid && found_iana && found_serverid);
+        assert_se(found_clientid && found_iana && found_serverid &&
+                  found_elapsed_time);
 
         assert_se(sd_dhcp6_lease_get_first_address(lease, &addr, &lt_pref,
                                                    &lt_valid) >= 0);
@@ -452,7 +467,8 @@ static int test_client_verify_solicit(DHCP6Message *solicit, uint8_t *option,
         uint8_t *optval;
         uint16_t optcode;
         size_t optlen;
-        bool found_clientid = false, found_iana = false;
+        bool found_clientid = false, found_iana = false,
+                found_elapsed_time = false;
         int r;
 
         assert_se(solicit->type == DHCP6_SOLICIT);
@@ -478,11 +494,19 @@ static int test_client_verify_solicit(DHCP6Message *solicit, uint8_t *option,
                         memcpy(&test_iaid, optval, sizeof(test_iaid));
 
                         break;
+
+                case DHCP6_OPTION_ELAPSED_TIME:
+                        assert_se(!found_elapsed_time);
+                        found_elapsed_time = true;
+
+                        assert_se(optlen == 2);
+
+                        break;
                 }
         }
 
         assert_se(r == -ENOMSG);
-        assert_se(found_clientid && found_iana);
+        assert_se(found_clientid && found_iana && found_elapsed_time);
 
         return 0;
 }
